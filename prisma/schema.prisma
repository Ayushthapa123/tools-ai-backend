generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @unique @default(autoincrement())

  email              String   @unique
  passwordHash       String?
  fullName           String
  profilePicture     String?
  phoneNumber        String?
  altPhoneNumber     String?
  hashedRefreshToken String?     
  dateOfBirth        DateTime?
  gender             GenderType?
  userType   UserType @default(USER)

  isVerified Boolean  @default(false)

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt 

  tool     Tool[]
}

model Tool {
  id         Int     @id @unique @default(autoincrement())
  name        String
  description String?
  shortDescription String?
  slug        String  @unique 
  handle      String  @unique 
  thumbnailUrl String?
  ranking     Int? @default(0)
  toolType  ToolType @default(IO) 
  visibility VisibilityType @default(PRIVATE)
  ownerId     Int 


  verifiedBySuperAdmin    Boolean @default(false) 

  owner            User             @relation(fields: [ownerId], references: [id])
  inputSchema         InputSchema?
  outputSchema        OutputSchema?
  toolMetadata      ToolMetadata?


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  deletedAt DateTime?
  @@index([id,slug])
  
  @@index([name])

  @@index([verifiedBySuperAdmin])
  @@index([createdAt])
}



// fo input schema/output/metadata

model InputSchema {
  id        Int     @id @unique @default(autoincrement())
  schema Json
  toolId  Int     @unique

  createdAt   DateTime @default(now())
  updatedAt          DateTime @updatedAt
  tool    Tool @relation(fields: [toolId], references: [id])
}

// no need for now
model OutputSchema {
  id        Int     @id @unique @default(autoincrement())
  schema Json
  toolId  Int     @unique

  createdAt   DateTime @default(now())
  updatedAt          DateTime @updatedAt
  tool    Tool @relation(fields: [toolId], references: [id])

}
model ToolMetadata {
  id        Int     @id @unique @default(autoincrement())
  title String
  description String 
  keywords String? 
  ogTitle String?
  ogDescription String?
  ogImageUrl String?
  toolId  Int     @unique

  createdAt   DateTime @default(now())
  updatedAt          DateTime @updatedAt
  tool    Tool @relation(fields: [toolId], references: [id])

} 





// model ToolSetting {

// }
// model ToolComent {

// }



//Enums 
enum UserType {
  CREATOR
  ADMIN
  USER
}

enum GenderType {
  BOYS
  GIRLS
  OTHERS
}


enum ToolType {
  IO  
  CURD

}
// Hostel categories. NO need to create schema. just create array of object in frontend.
enum VisibilityType {
  PUBLIC
  PRIVATE 

}


enum ToolStatus {
  DRAFT
  PUBLISHED
}   

