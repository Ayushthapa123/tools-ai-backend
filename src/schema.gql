# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  addressId: ID!
  city: String
  country: String!
  district: String
  street: String
  tole: String
  updatedAt: DateTime!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

type ContactDetails {
  altPhone: String
  contactId: ID!
  email: String
  phone: String!
  updatedAt: DateTime!
}

input CreateAddressInput {
  city: String
  country: String!
  district: String!
  hostelId: Float!
  street: String
  tole: String
}

input CreateContactInput {
  altPhone: String
  email: String!
  hostelId: Float!
  phone: String!
}

input CreateDailyPricingInput {
  attachBathroom: Float
  fiveSeater: Float
  fourSeater: Float
  hostelId: Float!
  oneSeater: Float
  threeSeater: Float
  twoSeater: Float
}

input CreateGalleryInput {
  caption: String
  hostelId: Float!
  type: String
  url: String!
}

input CreateHostelInput {
  capacity: Int
  description: String
  genderType: String!
  hostelType: String!
  name: String!
}

input CreateMonthlyPricingInput {
  admission: Float
  attachBathroom: Float
  deposite: Float
  fiveSeater: Float
  fourSeater: Float
  hostelId: Float!
  oneSeater: Float
  threeSeater: Float
  twoSeater: Float
}

input CreateRoomAvailibilityInput {
  attachBathroom: Boolean
  fiveSeater: Boolean
  fourSeater: Boolean
  hostelId: Float!
  oneSeater: Boolean
  threeSeater: Boolean
  twoSeater: Boolean
}

input CreateSocialsInput {
  facebook: String
  hostelId: Float!
  instaGram: String
  map: String
  tiktok: String
  youtube: String
}

input CreateUserInput {
  createdAt: DateTime!
  email: String!
  fullName: String!
  passwordHash: String!
  phoneNumber: String
  profilePicture: String
  updatedAt: DateTime!
}

type DailyPricing {
  attachBathroom: Float
  createdAt: DateTime!
  dailyPricingId: ID!
  fiveSeater: Float
  fourSeater: Float
  oneSeater: Float
  threeSeater: Float
  twoSeater: Float
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ForgotPasswordResponse {
  userId: Float!
}

type Gallery {
  caption: String
  galleryId: ID!
  hostelId: Int!
  type: String
  url: String!
}

input GetTokenInput {
  refreshToken: String!
}

type GoogleOauthUrl {
  url: String!
}

type Hostel {
  address: Address
  capacity: Float
  contact: ContactDetails
  createdAt: DateTime!
  dailyPricing: DailyPricing
  description: String
  gallery: [Gallery!]
  genderType: String!
  hostelId: ID!
  hostelType: String!
  monthlyPricing: MonthlyPricing
  name: String!
  orders: [Orders!]
  owner: Users!
  payments: [Payments!]
  roomAvailability: RoomAvailability
  slug: String!
  socials: Socials
  suppliers: [HostelSuppliers!]
  telegramId: String
  updatedAt: DateTime!
  userId: ID!
  verified: Boolean!
  whatsappId: String
}

type HostelSuppliers {
  createdAt: DateTime!
  hostelId: Int!
  id: ID!
  supplierId: Int!
}

input LoginInput {
  email: String!
  password: String!
}

type MonthlyPricing {
  attachBathroom: Float
  createdAt: DateTime!
  fiveSeater: Float
  fourSeater: Float
  monthlyPricingId: ID!
  oneSeater: Float
  threeSeater: Float
  twoSeater: Float
  updatedAt: DateTime!
}

type Mutation {
  changePassword(input: ChangePasswordInput!): String!
  createAddress(data: CreateAddressInput!): Address!
  createContact(data: CreateContactInput!): ContactDetails!
  createDailyPricing(data: CreateDailyPricingInput!): DailyPricing!
  createGallery(data: CreateGalleryInput!): Gallery!
  createHostel(data: CreateHostelInput!): Hostel!
  createMonthlyPricing(data: CreateMonthlyPricingInput!): MonthlyPricing!
  createRoomAvailibility(data: CreateRoomAvailibilityInput!): RoomAvailability!
  createSocials(data: CreateSocialsInput!): Socials!
  createUser(input: CreateUserInput!): Users!
  deleteGallery(galleryId: Float!): Gallery!
  forgotPassword(email: String!): ForgotPasswordResponse!
  loginUser(input: LoginInput!): UsersAndToken!
  refreshTokens(input: GetTokenInput!): UsersHostelIdAndToken!
  resetPassword(input: ResetPasswordInput!): UsersAndToken!
  signUpWithGoogle(input: SignupWithGoogleInput!): UsersAndToken!
  signupUser(input: SignupInput!): UsersAndToken!
  updateAddress(addressId: Float!, data: UpdateAddressInput!): Address!
  updateContact(contactId: Float!, data: UpdateContactInput!): ContactDetails!
  updateDailyPricing(dailyPricingId: Float!, data: UpdateDailyPricingInput!): DailyPricing!
  updateGallery(data: UpdateGalleryInput!, galleryId: Float!): Gallery!
  updateHostel(data: UpdateHostelInput!, hostelId: Float!): Hostel!
  updateMonthlyPricing(data: UpdateMonthlyPricingInput!, monthlyPricingId: Float!): MonthlyPricing!
  updateRoomAvailibility(data: UpdateRoomAvailibilityInput!, roomAvailibilityId: Float!): RoomAvailability!
  updateSocials(data: UpdateSocialsInput!, socialsId: Float!): Socials!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailResponse!
}

type Orders {
  createdAt: DateTime!
  discountPercent: Int
  hostelId: Int!
  notes: String
  orderId: ID!
  orderNumber: Int!
  productId: Int!
  quantity: Int!
  shippingDate: DateTime!
  totalPrice: Float!
}

type Payments {
  adPlanId: Int!
  createdAt: DateTime!
  hostelId: Int!
  paymentId: ID!
}

type Query {
  getAddressByHostelId(hostelId: Float!): Address
  getAllHostels(pageNumber: Int! = 1, pageSize: Int! = 10): [Hostel!]!
  getContactByHostelId(hostelId: Float!): ContactDetails
  getDailyPricingByHostelId(hostelId: Float!): DailyPricing
  getGalleryByHostelId(galleryType: String!, hostelId: Float!): [Gallery!]
  getGoogleAuthUrl: GoogleOauthUrl!
  getHostelById(hostelId: Float!): Hostel
  getHostelBySlug(slug: String!): Hostel
  getHostelByToken: Hostel
  getMonthlyPricingByHostelId(hostelId: Float!): MonthlyPricing
  getRoomAvailibilityByHostelId(hostelId: Float!): RoomAvailability
  getSocialsByHostelId(hostelId: Float!): Socials
  getUser(id: Float!): Users
  getUserByAccessToken(accessToken: String!): Users
  getUsers: [Users!]!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

type RoomAvailability {
  attachBathroom: Boolean
  fiveSeater: Boolean
  fourSeater: Boolean
  oneSeater: Boolean
  roomAvailabilityId: ID!
  threeSeater: Boolean
  twoSeater: Boolean
  updatedAt: DateTime!
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
  userType: String!
}

input SignupWithGoogleInput {
  token: String!
}

type Socials {
  facebook: String
  instaGram: String
  map: String
  socialsId: ID!
  tiktok: String
  youTube: String
}

type Token {
  accessToken: ID!
  refreshToken: String!
}

input UpdateAddressInput {
  city: String
  country: String
  district: String
  street: String
  tole: String
}

input UpdateContactInput {
  altPhone: String
  email: String
  phone: String
}

input UpdateDailyPricingInput {
  attachBathroom: Float
  fiveSeater: Float
  fourSeater: Float
  instaGram: String
  oneSeater: Float
  threeSeater: Float
  twoSeater: Float
}

input UpdateGalleryInput {
  caption: String
  type: String
  url: String
}

input UpdateHostelInput {
  capacity: Int
  description: String
  genderType: String
  hostelType: String
  name: String
  slug: String
  telegramId: String
  userId: Int
  verified: Boolean
  whatsappId: String
}

input UpdateMonthlyPricingInput {
  admission: Float
  attachBathroom: Float
  deposite: Float
  fiveSeater: Float
  fourSeater: Float
  instaGram: String
  oneSeater: Float
  threeSeater: Float
  twoSeater: Float
}

input UpdateRoomAvailibilityInput {
  attachBathroom: Boolean
  fiveSeater: Boolean
  fourSeater: Boolean
  oneSeater: Boolean
  threeSeater: Boolean
  twoSeater: Boolean
}

input UpdateSocialsInput {
  facebook: String
  instaGram: String
  map: String
  tiktok: String
  youtube: String
}

type Users {
  createdAt: DateTime!
  email: String!
  fullName: String!
  hashedRefreshToken: String!
  hostelId: Float
  isVerified: Boolean!
  passwordHash: String!
  phoneNumber: String
  profilePicture: String
  updatedAt: DateTime!
  userId: ID!
}

type UsersAndToken {
  email: String!
  fullName: String!
  token: Token!
  userId: ID!
}

type UsersHostelIdAndToken {
  token: Token!
  user: Users!
}

input VerifyEmailInput {
  token: String!
}

type VerifyEmailResponse {
  userId: Float!
}