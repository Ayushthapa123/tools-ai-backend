# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  addressId: ID!
  city: String
  country: String!
  district: String
  street: String
  updatedAt: DateTime!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

type ContactDetails {
  altPhone: String
  contactId: ID!
  email: String
  phone: String!
  updatedAt: DateTime!
}

input CreateHostelInput {
  addressId: Int!
  capacity: Int
  contactId: Int!
  description: String
  email: String!
  genderType: String!
  name: String!
  phone: String!
  pricingId: Int
  roomAvailabilityId: Int
  slug: String!
  socialsId: Int
  telegramId: String
  userId: Int!
  verified: Boolean!
  whatsappId: String
}

input CreateUserInput {
  createdAt: DateTime!
  email: String!
  fullName: String!
  passwordHash: String!
  phoneNumber: String
  profilePicture: String
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ForgotPasswordResponse {
  userId: Float!
}

type Gallery {
  caption: String
  galleryId: ID!
  hostelId: Int!
  type: String
  url: String!
}

input GetTokenInput {
  refreshToken: String!
}

type GoogleOauthUrl {
  url: String!
}

type Hostel {
  address: Address!
  addressId: Int!
  capacity: Int
  contact: ContactDetails!
  contactId: Int!
  createdAt: DateTime!
  description: String
  email: String!
  gallery: [Gallery!]!
  genderType: String!
  hostelId: ID!
  name: String!
  orders: [Orders!]!
  owner: User!
  payments: [Payments!]!
  phone: String!
  pricingId: Int
  roomAvailability: RoomAvailability
  roomAvailabilityId: Int
  slug: String!
  socials: Socials
  socialsId: Int
  suppliers: [HostelSuppliers!]!
  telegramId: String
  updatedAt: DateTime!
  userId: Int!
  verified: Int!
  whatsappId: String
}

type HostelSuppliers {
  createdAt: DateTime!
  hostelId: Int!
  id: ID!
  supplierId: Int!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(input: ChangePasswordInput!): String!
  createHostel(data: CreateHostelInput!): Hostel!
  createUser(input: CreateUserInput!): Users!
  forgotPassword(email: String!): ForgotPasswordResponse!
  loginUser(input: LoginInput!): UsersAndToken!
  refreshTokens(input: GetTokenInput!): Token!
  resetPassword(input: ResetPasswordInput!): UsersAndToken!
  signUpWithGoogle(input: SignupWithGoogleInput!): UsersAndToken!
  signupUser(input: SignupInput!): UsersAndToken!
  updateHostel(data: UpdateHostelInput!, hostelId: Float!): Hostel!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailResponse!
}

type Orders {
  createdAt: DateTime!
  discountPercent: Int
  hostelId: Int!
  notes: String
  orderId: ID!
  orderNumber: Int!
  productId: Int!
  quantity: Int!
  shippingDate: DateTime!
  totalPrice: Float!
}

type Payments {
  adPlanId: Int!
  createdAt: DateTime!
  hostelId: Int!
  paymentId: ID!
}

type Query {
  getAllHostels(pageNumber: Int! = 1, pageSize: Int! = 10): [Hostel!]!
  getGoogleAuthUrl: GoogleOauthUrl!
  getHostelById(hostelId: Float!): Hostel
  getUser(id: Float!): Users
  getUsers: [Users!]!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

type RoomAvailability {
  attachBathroom: String
  fiveSeater: String
  fourSeater: String
  oneSeater: String
  roomAvailabilityId: ID!
  threeSeater: String
  twoSeater: String
  updatedAt: DateTime!
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
  userType: String!
}

input SignupWithGoogleInput {
  token: String!
}

type Socials {
  facebook: String
  instaGram: String
  map: String
  socialsId: ID!
  tiktok: String
  youTube: String
}

type Token {
  accessToken: ID!
  refreshToken: String!
}

input UpdateHostelInput {
  addressId: Int
  capacity: Int
  contactId: Int
  description: String
  email: String
  genderType: String
  name: String
  phone: String
  pricingId: Int
  roomAvailabilityId: Int
  slug: String
  socialsId: Int
  telegramId: String
  userId: Int
  verified: Boolean
  whatsappId: String
}

type User {
  email: String!
  fullName: String!
  userId: ID!
}

type Users {
  email: String!
  fullName: String!
  userId: ID!
}

type UsersAndToken {
  email: String!
  fullName: String!
  token: Token!
  userId: ID!
}

input VerifyEmailInput {
  token: String!
}

type VerifyEmailResponse {
  userId: Float!
}